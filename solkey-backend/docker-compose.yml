version: '3.8'

services:
  app:
    build: .
    container_name: solkey-backend
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - SOLANA_NETWORK=${SOLANA_NETWORK:-devnet}
      - SOLANA_RPC_URL=${SOLANA_RPC_URL}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s    
  mongodb:
    image: mongo:6
    container_name: solkey-mongodb
    restart: unless-stopped      
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=adminpassword
      - MONGO_INITDB_DATABASE=solkey    
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-keyfile:/tmp/mongodb-keyfile:ro
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    command: mongod --auth --replSet rs0 --keyFile /tmp/mongodb-keyfile --bind_ip_all
    user: mongodb
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: '4G'
        reservations:
          cpus: '1'
          memory: '2G'
    healthcheck:
      test: mongosh --eval "db.adminCommand('ping').ok"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
volumes:
  mongodb_data:
    driver: local